      attributes(global) subroutine ax_cuf2(w,u,ur,us,ut,
     &                gxyz,dxm1,dxtm1)

      include 'SIZE_CUF'

      real, intent(out) :: w(lx1,ly1,lz1,lelt)
      real, intent(in)  :: u(lx1,ly1,lz1,lelt)
      real ur  (lx1,ly1,lz1,lelt)
      real us  (lx1,ly1,lz1,lelt)
      real ut  (lx1,ly1,lz1,lelt)

      real gxyz(lx1,ly1,lz1,2*ldim,lelt)

      real, intent(in) :: dxm1(lx1,lx1)
      real, intent(in) :: dxtm1(lx1,lx1)

      real rtmp,stmp,ttmp,wijke
      real, shared :: shdxm1(lx1,ly1)
      real, shared :: shdxtm1(lx1,ly1)
      real, shared :: shus(lx1,ly1,lz1/4)
      real, shared :: shut(lx1,ly1,lz1)
      integer e,i,j,k,l

      e = blockIdx%x
      k = threadIdx%z
      j = threadIdx%y
      i = threadIdx%x

      if (k.eq.1) then
         shdxm1(i,j) = dxm1(i,j)
         shdxtm1(i,j) = dxtm1(i,j)
      end if
      call syncthreads()

      rtmp = 0.0
      stmp = 0.0
      ttmp = 0.0
      do l=1,lx1
        rtmp = rtmp + shdxm1(i,l)    * u(l,j,k+12,e)
        stmp = stmp + shdxm1(j,l)    * u(i,l,k+12,e)
        ttmp = ttmp + shdxm1(k+12,l) * u(i,j,l,e)
      enddo
      ur(i,j,k+12,e) = gxyz(i,j,k+12,1,e)*rtmp
     $               + gxyz(i,j,k+12,2,e)*stmp
     $               + gxyz(i,j,k+12,3,e)*ttmp
      us(i,j,k+12,e) = gxyz(i,j,k+12,2,e)*rtmp
     $               + gxyz(i,j,k+12,4,e)*stmp
     $               + gxyz(i,j,k+12,5,e)*ttmp
      shut(i,j,k+12) = gxyz(i,j,k+12,3,e)*rtmp
     $               + gxyz(i,j,k+12,5,e)*stmp
     $               + gxyz(i,j,k+12,6,e)*ttmp

      rtmp = 0.0
      stmp = 0.0
      ttmp = 0.0
      do l=1,lx1
        rtmp = rtmp + shdxm1(i,l)   * u(l,j,k+8,e)
        stmp = stmp + shdxm1(j,l)   * u(i,l,k+8,e)
        ttmp = ttmp + shdxm1(k+8,l) * u(i,j,l,e)
      enddo
      ur(i,j,k+8,e) = gxyz(i,j,k+8,1,e)*rtmp
     $              + gxyz(i,j,k+8,2,e)*stmp
     $              + gxyz(i,j,k+8,3,e)*ttmp
      us(i,j,k+8,e) = gxyz(i,j,k+8,2,e)*rtmp
     $              + gxyz(i,j,k+8,4,e)*stmp
     $              + gxyz(i,j,k+8,5,e)*ttmp
      shut(i,j,k+8) = gxyz(i,j,k+8,3,e)*rtmp
     $              + gxyz(i,j,k+8,5,e)*stmp
     $              + gxyz(i,j,k+8,6,e)*ttmp

      rtmp = 0.0
      stmp = 0.0
      ttmp = 0.0
      do l=1,lx1
        rtmp = rtmp + shdxm1(i,l)   * u(l,j,k+4,e)
        stmp = stmp + shdxm1(j,l)   * u(i,l,k+4,e)
        ttmp = ttmp + shdxm1(k+4,l) * u(i,j,l,e)
      enddo
      ur(i,j,k+4,e) = gxyz(i,j,k+4,1,e)*rtmp
     $              + gxyz(i,j,k+4,2,e)*stmp
     $              + gxyz(i,j,k+4,3,e)*ttmp
      us(i,j,k+4,e) = gxyz(i,j,k+4,2,e)*rtmp
     $              + gxyz(i,j,k+4,4,e)*stmp
     $              + gxyz(i,j,k+4,5,e)*ttmp
      shut(i,j,k+4) = gxyz(i,j,k+4,3,e)*rtmp
     $              + gxyz(i,j,k+4,5,e)*stmp
     $              + gxyz(i,j,k+4,6,e)*ttmp

      rtmp = 0.0
      stmp = 0.0
      ttmp = 0.0
      do l=1,lx1
        rtmp = rtmp + shdxm1(i,l) * u(l,j,k,e)
        stmp = stmp + shdxm1(j,l) * u(i,l,k,e)
        ttmp = ttmp + shdxm1(k,l) * u(i,j,l,e)
      enddo
      ur(i,j,k,e) = gxyz(i,j,k,1,e)*rtmp
     $            + gxyz(i,j,k,2,e)*stmp
     $            + gxyz(i,j,k,3,e)*ttmp
      shus(i,j,k) = gxyz(i,j,k,2,e)*rtmp
     $            + gxyz(i,j,k,4,e)*stmp
     $            + gxyz(i,j,k,5,e)*ttmp
      shut(i,j,k) = gxyz(i,j,k,3,e)*rtmp
     $            + gxyz(i,j,k,5,e)*stmp
     $            + gxyz(i,j,k,6,e)*ttmp

!      us(i,j,k,e) = shus(i,j,k)
      call syncthreads()
      wijke = 0.0
      do l=1,lx1
        wijke = wijke + shdxtm1(i,l)*ur(l,j,k,e) 
     $                + shdxtm1(j,l)*shus(i,l,k)
     $                + shdxtm1(k,l)*shut(i,j,l)
      enddo
      w(i,j,k,e) = wijke
!      ut(i,j,k,e) = shut(i,j,k)

      call syncthreads()
      shus(i,j,k) = us(i,j,k+4,e)
      call syncthreads()
      wijke = 0.0
      do l=1,lx1
        wijke = wijke + shdxtm1(i,l)*ur(l,j,k+4,e) 
     $                + shdxtm1(j,l)*shus(i,l,k)
     $                + shdxtm1(k+4,l)*shut(i,j,l)
      enddo
      w(i,j,k+4,e) = wijke
!      ut(i,j,k+4,e) = shut(i,j,k+4)

      call syncthreads()
      shus(i,j,k) = us(i,j,k+8,e)
      call syncthreads()
      wijke = 0.0
      do l=1,lx1
        wijke = wijke + shdxtm1(i,l)*ur(l,j,k+8,e) 
     $                + shdxtm1(j,l)*shus(i,l,k)
     $                + shdxtm1(k+8,l)*shut(i,j,l)
      enddo
      w(i,j,k+8,e) = wijke
!      ut(i,j,k+8,e) = shut(i,j,k+8)

      call syncthreads()
      shus(i,j,k) = us(i,j,k+12,e)
      call syncthreads()
      wijke = 0.0
      do l=1,lx1
        wijke = wijke + shdxtm1(i,l)*ur(l,j,k+12,e) 
     $                + shdxtm1(j,l)*shus(i,l,k)
     $                + shdxtm1(k+12,l)*shut(i,j,l)
      enddo
      w(i,j,k+12,e) = wijke
!      ut(i,j,k+12,e) = shut(i,j,k+12)

      return
      end
